"""
–†–æ–∑—Ä–æ–±—ñ—Ç—å —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø—Ä–∏–π–º–∞—î —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –≤ —è–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—É –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
 —ñ –≤—ñ–∑—É–∞–ª—ñ–∑—É—î —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ü—ñ—î—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó, –≤–∏–≤–æ–¥—è—á–∏ —ñ–º–µ–Ω–∞ –≤—Å—ñ—Ö –ø—ñ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π —Ç–∞ —Ñ–∞–π–ª—ñ–≤.
 –î–ª—è –∫—Ä–∞—â–æ–≥–æ –≤—ñ–∑—É–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è, —ñ–º–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π —Ç–∞ —Ñ–∞–π–ª—ñ–≤ –º–∞—é—Ç—å –≤—ñ–¥—Ä—ñ–∑–Ω—è—Ç–∏—Å—è –∑–∞ –∫–æ–ª—å–æ—Ä–æ–º.
"""

import sys
from colorama import Fore, Style
from pathlib import Path


def show_directory_structure(path_str, level=0):
    """
    Shows directory structure
    :param path_str: path to directory
    :param level: length of spaces
    :return:
    """
    path = Path(path_str)
    spaces = 4*' '

    if path.is_dir():
        print(Fore.BLUE + level * spaces + 'üìÇ' + path.name + '/' + Style.RESET_ALL)
    else:
        print(Fore.RED + f"Error! Path {path} is a file, not a directory" + Style.RESET_ALL)
        return

    try:
        for element in path.iterdir():
            # —è–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç –ø–∞–ø–∫–∞, –≤–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ, –¥–æ–¥–∞—é—á–∏ –≤—ñ–¥—Å—Ç—É–ø –Ω–∞ –ø–æ—á–∞—Ç–∫—É
            if element.is_dir():
                show_directory_structure(element, level+1)

            # —è–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç —Ñ–∞–π–ª, –¥—Ä—É–∫—É—î–º–æ –∑ –≤—ñ–¥—Å—Ç—É–ø–æ–º
            if element.is_file():
                icon = ''
                element_type = element.suffix
                match element_type:
                    case '.txt' | '.doc' | '.docx' | '.pdf':
                        icon = 'üìù'
                    case '.zip' | '.tar' | '.gz':
                        icon = 'üóÇ'
                    case '.png' | '.jpg':
                        icon = 'üñº'
                    case '.xlsx':
                        icon = 'üìä'
                    case '.pptx':
                        icon = 'ü™ß'
                    case _:
                        icon = 'üìÑ'

                print(Fore.GREEN + (level+1) * spaces + icon + element.name + Style.RESET_ALL)

    except FileNotFoundError:
        print(Fore.RED + f"Error! Path {path} not found" + Style.RESET_ALL)


if __name__ == '__main__':
    show_directory_structure(sys.argv[1])
    # (.venv) anastasiapolakova@MacBook-Air-Anastasia goit-algo-hw-04 % python3 task3.py /Users/anastasiapolakova/Study/repository_destination/goit-algo-hw-04/temp