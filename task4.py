"""
–ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞ –ø–æ–º—ñ—á–Ω–∏–∫–∞, —è–∫–∏–π —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞—Ç–∏–º–µ –∫–æ–º–∞–Ω–¥–∏, —â–æ –≤–≤–æ–¥—è—Ç—å—Å—è –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏,
—Ç–∞ –±—É–¥–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –∑–≥—ñ–¥–Ω–æ —ñ–∑ –≤–≤–µ–¥–µ–Ω–æ—é –∫–æ–º–∞–Ω–¥–æ—é.

–ù–∞ –ø–µ—Ä—à–æ–º—É –µ—Ç–∞–ø—ñ –Ω–∞—à –±–æ—Ç-–∞—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ–≤–∏–Ω–µ–Ω –≤–º—ñ—Ç–∏ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —ñ–º'—è —Ç–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É,
–∑–Ω–∞—Ö–æ–¥–∏—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∑–∞ —ñ–º'—è–º, –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∑–∞–ø–∏—Å–∞–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É,
–≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å—ñ –∑–∞–ø–∏—Å–∏, —è–∫—ñ –∑–±–µ—Ä—ñ–≥. –©–æ–± —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ç–∞–∫—É –Ω–µ—Å–∫–ª–∞–¥–Ω—É –ª–æ–≥—ñ–∫—É, —Å–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ—Å—è —Å–ª–æ–≤–Ω–∏–∫–æ–º.
–£ —Å–ª–æ–≤–Ω–∏–∫—É –±—É–¥–µ–º–æ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫ –∫–ª—é—á, —ñ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —è–∫ –∑–Ω–∞—á–µ–Ω–Ω—è.
"""


import colorama

colorama.init(autoreset=True)

def main():
    print(colorama.Style.BRIGHT + colorama.Fore.LIGHTYELLOW_EX +
          "Welcome to bot-assistant üìûPhone Booküìû! What can I help you with? üòä")
    print(show_help())

    contacts = {}

    while True:
        input_str = input(">> ").strip().lower()
        if input_str == '':
            continue

        command, *args = parse_input(input_str)

        if command in ('exit', 'close'):
            break
        elif command == 'hello':
            print('How can I help you?')
        elif command == 'help':
            print(show_help())
        elif command == 'add':
            print(add_contact(args, contacts))
        elif command == 'change':
            print(change_contact(args, contacts))
        elif command == 'phone':
            print(find_contact(args[0], contacts))
        elif command == 'all':
            print(show_all(contacts))
        else:
            print(colorama.Fore.YELLOW + "‚ö†Ô∏è It's not a command. Type 'help' to see available commands")

    print(colorama.Style.BRIGHT + colorama.Fore.LIGHTYELLOW_EX +
          "Good bye! üòä")


def parse_input(input_str: str):
    command, *args = input_str.split()
    command = command.strip().lower()
    return command, *args


def show_help():
    return ("Command list:\n"
            "\tadd [name] [phone number]        | add new name and phone number\n"
            "\tphone [name]                     | find phone number by person's name\n"
            "\tchange [name] [new phone number] | edit phone number by person's name\n"
            "\tall                              | show all phone numbers\n"
            "\thelp                             | if you need to see this commands again\n"
            "\texit / close                     | to close bot-assistant")


def change_contact(args, contacts:dict):
    try:
        name, phone = args
        if contacts.get(name):
            contacts[name] = phone
            return colorama.Fore.GREEN + '‚úÖ Contact changed!'
        else:
            return colorama.Fore.RED + f"üî¥ Error! Contact with name '{name}' not found."
            # while True:
            #     print(colorama.Fore.YELLOW + f"‚ö†Ô∏è Contact with name '{name}' not found. Create new contact?")
            #     print("yes - create contact\n"
            #           "no - return to main menu")
            #
            #     answer = input('>> ').strip().lower()
            #     if answer == 'yes':
            #         contacts[name] = phone
            #         return colorama.Fore.GREEN + '‚úÖ Contact added!'
            #
            #     elif answer == 'no':
            #         return "Main menu. Type 'help' to see available commands"
            #
            #     else:
            #         print(colorama.Fore.YELLOW + "‚ö†Ô∏è Sorry, I don't understand")
    except ValueError:
        return colorama.Fore.RED + "üî¥ Error! Not enough arguments. Must be: edit [name] [phone number]"


def add_contact(args, contacts:dict):
    try:
        name, phone = args
        if contacts.get(name):
            return colorama.Fore.RED + f"üî¥ Error! Contact with name '{name}' already exists. Number: {contacts.get(name)}."
            # while True:
            #     print(colorama.Fore.YELLOW + f"‚ö†Ô∏è Contact with name '{name}' already exists. Number: {contacts.get(name)}. Do you want to overwrite it?")
            #     print("yes - overwrite\n"
            #           "no - enter new name\n"
            #           "skip - return to main menu")
            #
            #     answer = input('>> ').strip().lower()
            #     if answer == 'yes':
            #         contacts[name] = phone
            #         return colorama.Fore.GREEN + '‚úÖ Contact changed!'
            #
            #     elif answer == 'no':
            #         new_name = input("Enter new name: ")
            #         contacts[new_name] = phone
            #         return colorama.Fore.GREEN + '‚úÖ Contact added!'
            #
            #     elif answer == 'skip':
            #         return "Main menu. Type 'help' to see available commands"
            #
            #     else:
            #         print(colorama.Fore.YELLOW + "‚ö†Ô∏è Sorry, I don't understand")

        contacts[name] = phone
        return colorama.Fore.GREEN + '‚úÖ Contact added!'
    except ValueError:
        return colorama.Fore.RED + "üî¥ Error! Not enough arguments. Must be: add [name] [phone number] "


def find_contact(name, contacts:dict):
    try:
        return f"{name}: {contacts[name]}"
    except KeyError:
        return colorama.Fore.RED + f"üî¥ Contact with name '{name}' not found"


def show_all(contacts:dict):
    all_contacts = "All contacts:\n"
    for i, (name, phone) in enumerate(contacts.items()):
        all_contacts += f"{i+1}. {name}: {phone}\n"
    return all_contacts


if __name__ == '__main__':
    main()